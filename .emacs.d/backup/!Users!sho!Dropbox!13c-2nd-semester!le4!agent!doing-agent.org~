* 課題提出ページ
UserName: agentUser
Password: auctionSVM

* 1-1
- [ ] 斎藤さんの指摘分直す
  - int data_set_size; // 学習データの個数
    int data_set_dim; // 特徴ベクトル空間の次元
    この辺のグローバル変数は良くないと思います．
   
  - kernel_0やc_vなど，関数名が分かりにくいです．

* optional
- [X] まず1-1レベルで動くように…
- [X] cross-validation
- [ ] スケーリングして動かす
  - 書き換えちゃうよ
  - [ ] scaling option 付ける
    - [ ] README 追加
    - [ ] alert にも追加
- [ ] 何かを100倍にしたデータ作る
- [ ] 出力淡白すぎる
- [ ] svm.cc内include hoge.h→choge

* 1-2
** 考察に含めたいこと
- [ ] オプション課題(スケーリング)
  - コマンドライン引数?

- [ ] -付きの引数で1-1の機能と1-2の機能を使い分けたい!!

- [ ] vector周りの関数の別ファイル化
- [ ] vector周りの関数のBoost化

- [ ] svm周りの関数の別ファイル化

** 交差検定のチューニング
交差検定 - Wikipedia
http://ja.wikipedia.org/wiki/%E4%BA%A4%E5%B7%AE%E6%A4%9C%E5%AE%9A

分割数
- 交差検定の k の値はどれくらいにすればいいのか - ほくそ笑む
  http://d.hatena.ne.jp/hoxo_m/20110618/p1

パラメータが適切な範囲を徐々に絞っていく
- SVM のチューニングのしかた（１） - ほくそ笑む
  http://d.hatena.ne.jp/hoxo_m/20110324/p1
  ---
  Rで交差検定した結果のログ
  3-fold cross-validation on training data:
  Total Accuracy: 94.66667
  Single Accuracies:
  98 90 96
  ---
- SVM のチューニングのしかた（２） - ほくそ笑む
  http://d.hatena.ne.jp/hoxo_m/20110325/p1

** パラメータチェックのモジュール化
   
** global variable --> Class.property に変更することで名前空間汚す度が減る??


** SVM生成機能を別ファイル化

** 二次計画ライブラリの変更
- 二次計画問題ライブラリの変更
  http://sigpromu.org/quadprog/

- double checkって何をやってるの??

- CVXOPT

** C++/boost で線形代数計算できる?

** gnuplot
- C++/gnuplot 連携?
- グラデーション外したい

* 2-1
** tech
- Makefile mode に auto-complete 追加
- s/server で起動できないのはなぜ?
- stringへの書き込み、sprintfとstrcpyどっちが良い?
  - C++のstringは使えない?
- headerファイルの作法
- cin は istream 型?
- コンパイル時の-lmオプションの使い方
- インデント、全部空白にしたい……
- guiでがんがんマーク(or関数名)に飛べる仕組み欲しい
- typedef struct でpointer型にする理由は何?
- stdio.h -> cstdio

** small task
- dat_fp"s" にしたい
- make LIBS -lm
- read/write系の構文修正
  - fopen の引数の a とか
  - stdoutへの出力は、fputs(buf, stdout) で良いけど、if read_size>0 は要るのかな
- bufs もうちょい手前で定義?

** サーバの脆弱性?
- nameに" "とか":"が含まれている場合を排除したい
  - 最低限" "
  - 一般的な文字列だけにしたいよね…

** clientの脆弱性?
- 配列がでかいと死ぬ人が居る
- 名前が長いと死ぬ人が居る

** memo/report
- fpは, agent, goodsとも0はじまりのvector
  表示とはひとつずれる
- yの値は1/-1にし直して保存
- これでSVM作ってるけど、「g1:10 (すでに価格が止まっている)」と「(まだ入札できる)」は区別すべきよね
  - 「最高価格のみ動く」が大前提だから構わないのかな…

** MAIN TASKS
- svm.cc の //★ 乱暴に放置中
- 定数はグローバル変数constにするかなぁ
  http://www.geocities.jp/ky_webid/cpp/language/020.html

- dat_name string -> char* に直す?? string的な機能を一切使ってないな…

- ほかの商品を持っているか、をベクトル空間に入れる
- 交差検定導入
- クリーニング
  - まずい意味の重複データ
    - ソフトマージン導入?
  - 重複データ
  - 閾値を越えた大量のデータ

- svm.cc merge
  - グローバル変数削除
  - compile時にsvm.oとリンク

- リファクタリング

- player x good 毎に構造体でalph,theta持つ?
- 中身全部1なら、SVMというか、何もせずに返したい
- まず線形識別を試す?

- 初期値 g1:0 g2:0 ... 見せなくても、とりあえず内部的には持ちたい

- [ ] グローバル変数の排除 (うーん…共用体なら良いのかな)

- 自分の戦略を決める?
- 相手の動きを読む
  - 商品同士の相関係数とる?

- 組のデータをとるなら、SVMを多クラス化?

- 商品の評価値はどう手に入れる?

- BUF_LEN 256なのは脆弱性だなぁ

** done
- Makefile
- git
- String.split
  - str.token -> これすね…
  - stringだとうまく使えないぽいし
    - あ… #include <string> してなかっただけかも…?
- agent name毎に保存ファイルを作る
- 最後の処理
- ファイルからvecとしてimport data
  - というか別に計算量食わない
  - iostreamを使う
    - fp -> istream
    - ファイル名を指定して読み直す で良さそう
      - [ ] あらかじめ全部開いておくかー!! なんか汚いけど
  - fpをそのまま使う
    - read_data 関数を書き直す
    - [ ] 空白区切りをtokenか... 面倒 いずれ気が向いたらこっちにリファクタリングかなー
- fpを、num_of_goodsやらが確定した後にresize
- ファイル名を格納したべくた

- 通信機能とSVMの連携?
  - svm と client をマージ。data は外部ファイルに書き出すかなー
  - ./svm | ./client >> data で、 svm が data を毎週 open ?

- 1回につき1単位の値上げ?
  - yes
    そうでない説明は、一般的説明だと考えてほしい
- 評価値?
  - 「SVMで線を引ける = 評価値が分かった」とだいたい言える
  - SVMによる学習 --> 評価値の推定 --> 入札するかどうかの決定
    最後の「入札するかどうかの決定」ができればOK
    評価値を推定する工程がmustなわけではない
  - 考察が無ければいけないわけでもない
  - ランダム、あるいは様々な戦略を試してみて、
    何がどのように変化するかを試して欲しい

* 2-2
- goods price importのタイミング後の方が良いな…

- [ ] 他者の入札行動をモデル化
  - SVMが出来ている時点でOK??
  - このまま行ったらどうなるか予測??

- [ ] 入札戦略作る
  - [ ] SMV利用パターン
    - [ ] 再帰のネスト数入れておきたい
  - [ ] random
  - [ ] 一点集中

- SVM
  - "depth"は分かりづらいなー
  - SVMが作れないケースの処理
  - bidding_agents, winning_candidate を二進数管理に変更

- データ圧縮しないとSVM生成完了しない!!
  - とりあえずsort/uniqで…

- SVM作れない場合の対策
  - とりあえず、データ無い状態で depth==3で起動すると落ちる

- depthがアンダーフローする
  - 長さ比較してなるべくたくさん入札するもの…とすると発生

- [ ] 自己の入札戦略の決定
  - 一点集中
  - 二兎
  - 他者の入札行動をモデル化しない方法
    - 山登り法?
    - ランダムサーチ?
  - シミュレートしてから決める??
- [ ] 対戦させてより良い戦略を
- [ ] スコアリングの方法?
- [ ] 効用を吐き出す関数?
- [ ] import evaluation values

リファクタリング
- [ ] 基本情報として num_of~ と my_id まとめとく?
- [ ] 表示時は確定*, 降り- とかで書くようにしたいなぁ
- [ ] 既にオークションが終わっている商品の入手確率、double型で確保しておけば軽くなる
- [ ] 二進数化、関数に
- [ ] クラス+メッセージ化
  - goods 初期化はコンストラクタでやりたいなぁ
  - 引数処理面倒だしなぁ
- [ ] 場合分けのパターン減らす
  - 入札可能なパターンのみを見る
  - 入札可能なパターンを1にしたマスクとorを取って、マスクと不一致なら切るとか
- [ ] サーバ接続部分、分けたい…

- SVM
  - [ ] データの蓄積方法の変更
    - 前処理でuniq?
  - [ ] そもそもの選択肢を減らす

* done
QuadProg++.cc
- print_matrix の name の型を char * -> const char * に変更

QuadProg++.hh
- MATRIX_DIM の値変更

* 課題一覧
|     |                 | pdf-概要 | pdf-詳細 | 演習の概要.html | 課題提出.html |
|-----+-----------------+----------+----------+-----------------+---------------|
|   0 | SVMの仕組の理解 | v        |          | v               |               |
|-----+-----------------+----------+----------+-----------------+---------------|
| 1-1 | 基本SVM作成     | v        | v        | v               | v             |
|-----+-----------------+----------+----------+-----------------+---------------|
| 1-2 | 予測精度の評価  | v        | v        | v               | v             |
|-----+-----------------+----------+----------+-----------------+---------------|
| opt |                 | v        |          |                 | v             |
|-----+-----------------+----------+----------+-----------------+---------------|
| 2-1 | 拡張            | v        | v        | v               | v             |
|-----+-----------------+----------+----------+-----------------+---------------|
| 2-2 | 戦略の洗練      | v        | v        | v               | v             |


