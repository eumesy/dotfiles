教科書に練習問題付いてる

* 
- 複数人でひとつのソフトを作る

* 第1章 ソフトウェア工学概観
** ソフトウェア工学の目的・目標 ==> ソフトウェアの生産性および品質の向上
- これらはトレードオフ

** ソフトウェア工学には直交する3つの軸がある
*** ライフサイクル (この教科書で扱う一番大きな軸)
- 要求分析・定義
- 設計
- プログラミング
- テスト
- 保守

*** プロダクト（生産物時代の構成や構造がどうあるべきか）・プロセス（それを作る過程）

*** モデル（一般論）・その適用方法・支援するツール

** 対象とするソフトウェア ==> 情報システム・組み込みシステム
- 情報システム (この講義の主眼)
- 組み込みシステム

* 第2章 プログラミング
** 構造化プログラミング
*** プロダクト
- 制御構造 (プログラム)
  - ブロックに分割
    - 逐次
    - 選択
    - 反復
  - あるブロックとその縦横の隣接関係だけを注視した理解の積み上げで全体をカバーできる

- データ構造 (データ)
  - 配列
  - 構造体

*** プロセス
- *段階的詳細化*
  - *疑似プログラミング*

** モジュール化プログラミング (機能抽象 手続き抽象)
構造化の単位を大きくする

名前付けと引数だけ見える
(プログラムの中身はブラックボックス)

** オブジェクト指向プログラミング (データ抽象)
データの使い方だけを表に見せる
(データ構造の実装はブラックボックス)

* 第3章 要求と分析
** 3.1 要求獲得 (システム化対象項目=具体的な1機能 を決定する ツリーの末端に出てくる)
*** 現行システム分析
*** 問題点分析・ニーズ分析 (戦術的・技術的)
*** 目的展開 (戦略的)
この2項、要するにツリーを作りましょうって話?
*** 意思決定

** 3.2 要求記述
*** (振る舞いを) シナリオ (として記述)
*** 非形式的な自然言語 -> 形式的な記述 (=? 仕様)
箱と線の図をよく使う

仕様
- 抜けが無い
- 曖昧でない
- 無矛盾
*** 
要求
- 機能要求 (この章の以下のスコープ
- 非機能要求・品質要求

** 3.3 構造化分析とその仕様化
*** データフローモデル
データの流れ
データをどの機能が処理するか (それからどの機能に渡すか?)
*** 状態遷移モデル
状態の導入
タイミングが分かる
*** 実体関連モデル


