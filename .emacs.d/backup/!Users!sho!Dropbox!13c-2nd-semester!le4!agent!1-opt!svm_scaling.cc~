int main(int argc, char *argv[]) {
//   int num_of_parts; // 与えられたデータの分割数(交差検定)
//
  // check params
  if (argc < 2+1) {
	alert_arg();
  }
  num_of_parts = atoi(argv[1]);
  kernel__ = atoi(argv[1+1]);
  switch (kernel__) {
  case 0: { // 線形カーネル
	break;
  }
  case 1: { // 多項式カーネル
	if (argc != 3+1) alert_arg();
	param_d = atoi(argv[2+1]);
	break;
  }
  case 2: { // Gaussカーネル
	if (argc != 3+1) alert_arg();
	param_s = atoi(argv[2+1]);
	break;
  }
  case 3: { // シグモイドカーネル
	if (argc != 4+1) alert_arg();
	param_a = atoi(argv[2+1]);
	param_b = atoi(argv[3+1]);
	break;
  }
  }

//   // read data
//   vector<vector<double> > x_given;
//   vector<int> y_given;
//   read_data(x_given, y_given, cin);

//   // 1-2
//   // cross validation
//   printf ("%f\n", cross_validation(x_given, y_given, num_of_parts));

//   // 1-1
//   // int given_set_size = x_given.size(); // 学習データの個数
//   // // solve quadratic programming problem
//   // vector<double> alph(given_set_size);
//   // solve_quad_problem(x, y, alph);
//   // // make discriminant function
//   // double theta = calc_theta(x, y, alph);
//   // // print function
//   // print_function(x, y, alph, theta);

  return 0;
}
