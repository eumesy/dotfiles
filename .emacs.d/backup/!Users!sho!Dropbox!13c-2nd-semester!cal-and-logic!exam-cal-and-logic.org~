* 試験について
- 規則名は多少違っていても(一貫回していれば)大目に見る
- 試験のできがかんばしくない人は、
  試験問題を解いて2/7までにレポートとして提出する
- 公式カンペ持ち込み可

* memo
- [ ] 「期末試験について」演習問題プリント末尾

* todo
- [ ] 演習
- [ ] 去年の期末試験の方が難しいぞ…
- [ ] 提出ページ 先生の返答に返答

** 公式カンペ
- 公式カンペへの紙のはりつけはNG

- [-] 単純型付ラムダ計算
  - [-] 簡約
    - [X] 主たる簡約規則
      - [X] R-Beta
      - [X] R-Fix
      - [X] 他は名前だけ
    - [X] 部分項の簡約
      - [X] ひとつ見本 RC-App1とか
      - [X] あと名前だけ
    - [ ] 等しさ(←→)どうしようかな
    - [ ] 合流性
  - [ ] 型付規則
    - [ ] **性とか
  - [ ] 自然数リスト (多相ラムダ計算のレジュメ序盤)
- [X] 多相ラムダ計算
- [ ] 直観主義命題論理
  - [ ] レジュメ5.1 「等しさに関する導出規則」など
  - [ ] Prop型の型付規則諸々
- [ ] 直観主義述語論理＋単純型付ラムダ計算
  - [ ] 演習4以後洗ってない

  - [ ] カリーハワード同型対応
  - [ ] 直観主義論理で証明できない命題

- [-] 形式的証明
  - [X] 導出に関する帰納法
  - [ ] 導出に関する場合分け

- [X] 定義押さえて (レジュメから出るのは、定義と、日本語証明の方法くらい)
- [ ] 演習と過去問つぶして (演習の方が重要)
  - 多相ラムダ計算と日本語証明時間かかりそう
- [ ] ここまでで、公式カンペに入れるべき内容を洗いたい
- 高階関数やってないな…

- [ ] 諸々の定義を押さえていないと死ぬやつでは…
  - 定義の類は覚えるか公式カンペにまとめておきましょうって事ですね

- 去年の問題の前半は演習問題をし倒すとして…
- 去年の問題の後半、むずくね…？
  - まず演習問題5.1を完璧にしようか…

- [ ] Coq のプログラム
  - [ ] 型の定義
  - [ ] 命題の定義
  - [ ] 関数の定義
  - [ ] レジュメに出てきた分を洗いきる?

- [ ] 日本語の非形式的証明
  - [ ] 演習問題5
  - [ ] 2012 問4(2)
  - [ ] l ++ [] = l の証明? (#3)

- [ ] 単純型付ラムダ計算
  - [ ] 単純型付ラムダ計算の簡約関係(の判断?)の導出
    - [ ] 演習問題1.1-1.3
    - [ ] 2012 問2
  - [ ] 単純型付ラムダ計算の型付け関係の判断の導出
    - [ ] 演習問題1.4

- [ ] 多相ラムダ計算
  - [ ] 多相ラムダ計算の簡約関係(の判断?)の導出
    - [ ] 演習問題2.1
  - [ ] 多相ラムダ計算の型付け関係の判断の導出
    - [ ] 演習問題2.2
    - [ ] 2012 問4(1)

- [ ] 直観主義命題論理
  - [ ] 命題論理の判断の導出
    - [ ] 演習問題3
    - [ ] 2012 問3
  - [ ] 古典主義命題論理と直観主義命題論理の強さの違い
    - [ ] 2012 問1

- [ ] 直観主義述語論理＋単純型付ラムダ計算(の意味論?)
  - [ ] 述語論理(単純型付ラムダ計算に関する論理)の判断の導出
    - [ ] 演習問題4

* 2014-01-28
宿題最終締め切り (optionも)
  1-4 1/31
  5-8 2/7


* 
- [-] 1
  - [X] 自然数型 (帰納的データ定義)
  - [X] 関数定義、再帰的関数定義
  - [X] 全称量化の証明
  - [ ] 書き換えによる証明
  - [X] 場合分けによる証明

- [X] 2
  - [X] 帰納法による証明

- [-] 3
  - [X] 自然数のペア
  - [X] 自然数のリスト
  - [X] リストに関する推論 (特に帰納法)
  - [ ] repeat
  - [X] length
  - [X] 「++」(append)
  - [ ] head, tail
  - [ ] rev
  - [ ] snoc

- [-] 4 多相性
  - [X] 多相的リスト
  - [ ] 多相的length
  - [ ] 関数引数の暗黙化 {X:Type}

- [ ] 4,5 高階関数
  - [ ] filter
  - [ ] 匿名関数
  - [ ] map
  - [ ] fold
  - [ ] 定数関数
  - [ ] (突然の) unfold

- [ ] 5 MoreCoq
  - [ ] apply
  - [ ] apply with
  - [ ] inversion
  - [ ] ★帰納法の仮定を変える double n = double m -> n = m
  - [ ] 複合的destruct

- [ ] 6
  - [ ] False
  - [ ] not

