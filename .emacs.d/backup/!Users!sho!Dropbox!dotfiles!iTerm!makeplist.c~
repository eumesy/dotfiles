#include <stdio.h>

void c_c(char c, char mod_code1, int mod_code2) {
  printf("<key>0x%02x-0x%c0000</key>\n", c, mod_code1);
  printf("<dict>\n");
  printf("  <key>Action</key>\n");
  printf("  <integer>10</integer>\n"); // send escape sequences
  printf("  <key>Text</key>\n");
  printf("  <string>[27;%d;%02d~</string>\n", mod_code2, c);
  printf("</dict>\n");
}

void es1(const char* str, char C, char mod_code1, int mod_code2) {
  printf("<key>0x%s-0x2%c0000</key>\n", str, mod_code1);
  printf("<dict>\n");
  printf("  <key>Action</key>\n");
  printf("  <integer>10</integer>\n"); // send escape sequences
  printf("  <key>Text</key>\n");
  printf("  <string>[1;%d%c</string>\n", mod_code2, C);
  printf("</dict>\n");
}

// c-ret 27;5;13~


int main(int argc, char *argv[])
{
  int signs[] = {'\'', ',', '-', '.', '/', ';', '='};
  int signs_len = sizeof signs / sizeof signs[0];
  int s_signs[] = {'!', '"' ,'#' ,'$' ,'%' ,'&' ,'(', ')', '*', '+', ':', '<', '>', '?'};
  int s_signs_len = sizeof s_signs / sizeof s_signs[0];

  // arrows[] = {up, down, right, left}
  const char* arrows_iterm[] = {"f700", "f701", "f703", "f702"};
  char arrows_emacs[] = {'A', 'B', 'C', 'D'};
  int arrows_len = 4;

  // S, M, M-S, C, S-C, C-M, C-M-S
  char mod_key_arrows[] = {'2', '8', 'a', '4', '6', 'c', 'e'};
  int mod_len = 7;

  int i, j;
  
  printf("<key>xterm Defaults2</key>\n");
  printf("<dict>\n");

  // C-SIGN
  for (i=0; i<signs_len; i++) c_c(signs[i], '4', 5);
  for (i=0; i<s_signs_len; i++) c_c(s_signs[i], '6', 6);
  // C-M-SIGN
  for (i=0; i<signs_len; i++) c_c(signs[i], 'c', 7);
  for (i=0; i<s_signs_len; i++) c_c(s_signs[i], 'e', 8);

  // MODIFIER-ARROWS
  for (j=0; j<mod_len; j++)
	for (i=0; i<arrows_len; i++)
	  es1(arrows_iterm[i], arrows_emacs[i], mod_key_arrows[j], j+2);
  
  printf("</dict>\n");
  return 0;
}

// c-tab
// c-ret
// 				<key>0x9-0x40000</key>
// 				<dict>
// 					<key>Action</key>
// 					<integer>11</integer>
// 					<key>Text</key>
// 					<string>0x18 0x40 0x63 0x09</string>
// 				</dict>
// 				<key>0xd-0x40000</key>
// 				<dict>
// 					<key>Action</key>
// 					<integer>11</integer>
// 					<key>Text</key>
// 					<string>0x18 0x40 0x63 0x0d</string>
// 				</dict>
