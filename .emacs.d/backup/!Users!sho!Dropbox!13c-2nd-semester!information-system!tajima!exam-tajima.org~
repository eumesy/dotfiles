* 「ここが出ます」アナウンス
- PageRank/HITS
- XPath
- 記述 (1回目, 2回目あたりから)
  # なんだ…RHGは出さないって意味か…
  # でも田島先生悪気なく漏れそうだしな…。コンパイラ…
  # 過去問にもめっちゃ出てるしな…
  - 「説明せよ」が5〜10行ってかなり長いな

* todo
- [ ] 情報システム全般
  - [ ] 構造化文書
    - [ ] 演習問題6(a),2011-5(a)「構造化文書における二種類の構造、それら二種類を分離して記述する場合の二種類の方法、および、それら二種類の方法の長所短所を解答用紙5〜10行程度で説明せよ」
    - [ ] 2009-a(a)「構造化文書の記述の際の、レイアウト情報の記述に関する三種類の方式について解答用紙5〜10行程度で説明せよ」
    - [ ] 2007-4「構造化文書の記述において、文書の論理構造とレイアウト情報を分離することの利点を簡単に説明せよ」
  - [ ] マルチメディア、ハイパーメディアシステムとオブジェクト指向
    - [ ] 2012-3,2011-5(b)「マルチメディアにおけるオブジェクト指向の重要性について解答用紙5〜10行程度で説明せよ」
    - [ ] 2010-3(a)「マルチメディアシステム、ハイパーメディアシステムにおけるオブジェクト指向の重要性について解答用紙5行程度で説明せよ」
  - [ ] 未着手
    - [ ] Dexterモデル
    - [ ] SOAPとかAjaxとか
    # この辺知ってないと恥ずかしい気はする…

- [-] Webデータの解析  (PageRank/HITS)
  - [X] 演習問題 3, 4, 5
  - [ ] 試験 :: 「被リンク数とPageRankの順番が不一致な例を挙げよ」いいかも

- [-] XMLとその問い合わせ言語 (XPath)
  - [-] XPath
    - [ ] 演習問題 1「二つのXPath式の組の各々について二つのXPath式が常に同じ解を返す式であるならばその理由、そうでなければ異なる式を返すようなデータの例とそれぞれの式の解」
    - [X] ルーズリーフに演習問題 x 2 (後半は小テスト)
  - [-] DOM/SAX
    - [X] とりあえず
    - [ ] 演習問題 6(b)「XML処理に使われる二種類の処理方法DOMとSAXの基本的考え方、および、それらの長所短所を解答用紙5〜10行程度で説明せよ」
  - [ ] XQuery/XSLT
    - [ ] blog印刷したのに載ってる「はてダの更新も〜」の方
    - [ ] とりあえず
    - [ ] 2009-3-b「XQueryとXSLTの基本的な処理方式の違いを解答用紙5〜10行程度で説明せよ」

- [-] 木構造データの構造を規定する木文法
  - Keyword: DTD, XML Schema, RELAX NG, Regular Hedge Grammar (RHG)
  - [-] 過去問
    - [ ] 演習2「これら二つのDTDの和を含むDTDで、できるだけ小さい言語となるものを書け」
    - [ ] 演習2「これら二つの和には含まれないが、上野DTDには含まれてしまうXMLデータの例を一つ書け」
    - [ ] 演習6(c)「DTDとRHGを比較した場合の各々の長所と短所を解答用紙5〜10行程度で説明せよ」
    - [X] 2012-5「(与えられたRHGのスキーマ)を(...)となるように変更せよ」
  - [ ] DTD
    - [ ] スキーマ記述言語の比較 (DTD, XML Schema, RELAX NG)
  - [-] RELAX NG
    - [ ] Hedge
    - [X] RHG (Regular Hedge Grammar)
    - [ ] DHA (Deterministic Hedge Automaton)
    - [ ] NDHA (Non-Deterministic Hedge Automaton)
  - [ ] XML Schema
  

* 演習・過去問範囲
|      | (1)情報システム全般                                              | (3)Web分析 PageRank/HITS | (4) XML, 問い合わせ言語 XPath | (6)木構造データ              |
|      |                                                                  |                          |                               |                              |
|------+------------------------------------------------------------------+--------------------------+-------------------------------+------------------------------|
| 演習 | 6(a). 構造化文書の二種類の構造を分離して記述する二種類の方法     | 3,4,5. PageRank/HITS推定 | 1. XPath式読み取り            | 2. DTD読み取り               |
|      |                                                                  |                          | 6(b). DOM/SAX違い             | 6(c). DTD/RHG比較            |
|------+------------------------------------------------------------------+--------------------------+-------------------------------+------------------------------|
| 2012 | 3. マルチメディア処理におけるオブジェクト指向の重要性            | 6. PageRank/HITS推定     | 4. XPath式読み取り            | 5. RHGスキーマの修正         |
|------+------------------------------------------------------------------+--------------------------+-------------------------------+------------------------------|
| 2011 | 5(a). 構造化文書の二種類の構造を分離して記述する二種類の方法     | 4. PageRank/HITS推定     | 3. XPath式読み取り            |                              |
|      | 5(b). マルチメディアシステム及びハイパーメディアシステムにおける |                          |                               |                              |
|      | オブジェクト指向の重要性                                         |                          |                               |                              |
|------+------------------------------------------------------------------+--------------------------+-------------------------------+------------------------------|
| 2010 | 3(a). マルチメディアシステム及びハイパーメディアシステムにおける | 5. PageRank/HITS推定     | 4. XPath式読み取り            | 3(b). DTD/RHG比較            |
|      | オブジェクト指向の重要性                                         |                          |                               | 3(c). interval labeling      |
|------+------------------------------------------------------------------+--------------------------+-------------------------------+------------------------------|
| 2009 | 3(a). 構造化文書でレイアウト情報を記述する三種類の方法           | 5. PageRank/HITS推定     | 4. XPath式読み取り            | 3(c). 局所木文法の局所の意味 |
|      |                                                                  |                          | 3(b). XQuery/XSLT違い         |                              |
|------+------------------------------------------------------------------+--------------------------+-------------------------------+------------------------------|
| 2007 | 4. 文書の論理構造とレイアウト情報を分離させる利点                | 6. PageRank/HITS考察     | 1. XPath式読み取り            | 5. DTD/RHG比較               |

* ハイパーテキスト、ハイパーメディア、構造化文書、Web
** 
- 情報システム
  - 個人: 人間の知的作業において情報を整理活用することを支援するためのシステム
    - Memex (1945)
  - 社会: 社会における情報流通基盤となるシステム
    - the World-Wide Web (1991)
      - これは前者の意味も?

** what is the WWW
- ハイパーテキスト
  - ノードとリンクからなるグラフ構造を持つデータ
    - 通常、ノードは文書
    - アンカーでデータ間の関連を表現
  - 非線形な閲覧を実現

- マルチメディア :: 複数種類のメディアからなる複合データ

- ハイパーメディア :: ハイパーテキスト＋マルチメディア

- Web
  - 分散ハイパーテキスト ::
  - *HTTP* ＋ *HTML* ＋ *URI*

** 構造化文書
- 構造化文書 :: 二種類の「文書の構造」を _機械が理解できる形で_ 埋め込んだもの

- SGML :: 様々なマークアップ言語を定義するための枠組み
- HTTP :: ハイパーテキスト用の構造化文書(の記述言語?) SGMLのインスタンス
  - CSS
- XML(Extensible Markup Language)
  - XSL(Extensible Stylesheet Language)
- TeX

- 二種類の文書の「構造」
  - 論理構造 :: 文書の論理上の構成
  - 物理レイアウト構造 :: 特定デバイス上での表示上の構造

- レイアウトの生成方法
  - 手動生成 (ごちゃごちゃ, WYSIWYG)
    - 論理構造と物理構造をいっしょくたに
    - DTP
    - 高度なレイアウトが必要なもの
    - WISIWYG
  - 論理構造と物理レイアウト構造を分けて書く
    - 自動生成 (ファイルが二つ、(基本的に?)ユーザは論理構造のみ)
      - ユーザは完全に論理構造のみを指定
      - Tex, LaTeX
      - 各文書ファイル＋(ほぼ固定の)スタイルファイル
      - o 統一された書式を持つ大量のデータに有効
      - x ファイルが2つに分かれる
    - 半自動生成 (一つのファイルに分けて書く)
      - ユーザがデータの中に以下の二つを _分離して記述_
        - 論理構造
        - _レイアウト規則_
      - o 同じレイアウトの繰り返しが現れる文書に有効
      - o ファイルひとつ (メールなどの添付も容易)

- なぜ分けて書くと便利か
  - 論理構造だけ記述して、レイアウトを自動生成できる
  - ひとつの書式と、それを用いる複数のデータの表現 (HyperCardのフォアグラウンドカードとバックグラウンドカード)

- HTML
  - 自動生成
  - もう少し指定したければスタイルシートを記述
  - HTMLでスタイルを書ける <font>
  - 論理構造とレイアウト構造をさらに分離する方向
    - XML＋XSL

** オブジェクト指向
- オブジェクト指向
  - 
    - 手続き型、関数型 :: データを機能に流す
      - 我々が何をするか決めてやらねばならない
        - e.g. CUI
        - $ dosomething hoge
    - オブジェクト指向 :: オブジェクト同士がメッセージを投げ合う
      - データ側がよしなに計らってくれる
	- e.g. ウィンドウシステム
	- クリック = デフォルトのメッセージを送る
	- 「 _俺は_ 動画ファイルだからWindows Media Playerを開かないとね〜」
      - _メディアを統一的に扱うハイパーメディアにおいては非常に重要な概念_
	- データタイプによらない統一的な仕組みが必要

* XMLとその問い合わせ言語
** XMLとは
- SGML(standard generalized markup language) :: 汎用のマークアップ言語の規格
- XML :: SGML - 複雑すぎるところ
  - ユーザがタグを定義し _論理構造_ を記述
  - スタイルシートにより表示を記述
  - 構造化「文書」だけではなくデータ交換にも有用

** XMLのsyntax
  - 要素
  <要素名> ... </要素名>
   
  - 属性
  <要素名 ... 属性名="属性値" ... >
   
  | 子要素とそのテキスト値 | 属性と属性値                   |
  |------------------------+--------------------------------|
  | 同じ名前の子要素複数OK | 同一要素に同一属性はひとつまで |
  | 順序に意味がある       | 順序に意味はない               |

** XMLデータ処理の枠組み (基本的には大規模木構造データの処理全般に通じる話)
- プログラムAPI :: 既存プログラミング言語のためのインタフェース
  - オンラインアルゴリズム DOM :: 
  - オフラインアルゴリズム SAX :: 
  - Relaxer :: RELAX文法を読み込んで、XMLデータをマップする適切なJavaクラスを自動生成
               XMLデータから、自動生成したクラスのオブジェクトを自動生成
x`
|        | DOM                 | SAX                     |
|--------+---------------------+-------------------------|
| メモリ | × 大量に使う       | ○ 使用量が少ない       |
|        | ○ 複雑な処理が容易 | × 複雑な処理が困難     |
|        |                     | ○ ストリーム処理が可能 |

- 検索・操作言語 :: 専用言語
  - XPath
  - XQuery :: FLWOR構文と呼ばれるSQLのような構文
  - XSLT :: 再帰的に定義される型とその操作の定義

* 木構造データのスキーマ(構造)記述言語
- スキーマ :: 各アプリケーションにおいて使用するタグ・セットおよびそれらの間の関係
- スキーマ記述言語 :: を明示的に規定する枠組
  - DTD
  - RELAX NG
  - XML Schema

|            | DTD                        | RELAX NG                     | XML Schema                               |
|------------+----------------------------+------------------------------+------------------------------------------|
| 文法       | 局所木文法                 | (ほぼ)単一型木文法           | 正規木文法(Regular Tree (Hedge) Grammar) |
|------------+----------------------------+------------------------------+------------------------------------------|
| 同じ要素名 | x 必ず同じコンテンツモデル | o 出現位置によって           | o 出現位置によって                       |
|            |                            | コンテントモデルを変えられる | コンテントモデルを変えられる             |
|------------+----------------------------+------------------------------+------------------------------------------|
| 積         | 閉じている                 | 閉じている                   | 閉じている                               |
| 和・差     | x 閉じていない             | x 閉じていない               | o 閉じている                             |
|------------+----------------------------+------------------------------+------------------------------------------|
| 解釈       |                            | o 一意                       | x 一意に決まらない                       |


- RELAX NGとXML Schemaは、「解釈が一意」「和・差に閉じている」でトレードオフ

** DTD
- 子の並びを正規表現で書く
<!ELEMENT univ (dept)+>

** RELAX NG
- RHGのDTDとの比較
  - DTD: タグ名と非終端記号が1対1対応
    - タグ名が出てくるとその下位構造が確定してしまう
    - ネスト数の制限もできない

** XML Schema

* ?
- 田島先生第六回レジュメ p.14 の Regular Hedge Grammar の説明で、「生成規則は n→x または n→a(u)」ってなっているのは「〜 n→a〈u〉」の間違いかな?
