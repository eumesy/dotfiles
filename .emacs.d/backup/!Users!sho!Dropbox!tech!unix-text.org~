UNIX系online-judge無い?

* want to do
にひりずむ::しんぷる - homebrew で最低限これだけはいれておけってやつ
http://blog.livedoor.jp/xaicron/archives/54458405.html
xargs コマンドの使い方を覚える ｜ 温故知新 linux実践講座
http://arakanoj.com/xargs-%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89%e3%81%ae%e4%bd%bf%e3%81%84%e6%96%b9%e3%82%92%e8%a6%9a%e3%81%88%e3%82%8b-2619.html

* 総論
Linuxコマンドでテキストデータを自在に操る - orangain flavor
http://orangain.hatenablog.com/entry/20100916/1284631280
縦結合 cat
横結合 paste, join
行抽出 grep
列抽出 cut, awk
行変換 sed
ソート sort, sort -r
uniq, uniq -d (要ソート)
行カウント wc -l 
単語カウント wc -w

データ集計コマンドを極めてシステム処理と業務速度を爆速化するお話 - Yuta.Kikuchiの日記
http://d.hatena.ne.jp/yutakikuchi/20130801/1375314238

クロス集計をBash(とawk)だけで実装した話
http://www.slideshare.net/iktakahiro/bashawk

cut, sort, uniq で生産性を5%向上させる - bonar note
http://blog.bonar.jp/entry/20070618/1182183655

シェルを覚えた経緯を詳し目に書いてみる - zenpouの日記
http://d.hatena.ne.jp/zenpou/20080224/1203869848#20080224f2
1: パイプラインを覚える
2: sort や grep など、パイプラインで処理するのに便利なコマンドを覚える。
3: ls | awk '{print $2}' とかやってみて、スペースで区切られた２列目が表示される事に感動してみる。
4: ls | awk '{print "ls "$2}'でコマンドを作ってみてls | awk
5: '{print "ls "$2}'|sh でコマンドをばーっと処理してくれる事に感動してワンライナーを作り出す。
6: xargs を覚えたり、awk のFSの設定方法とかを覚えたり、`で囲み始めてワンライナーが徐々に上手くなる。
7: シェルスクリプトを書き出して、for FILES in `ls`でループまわし始めたりしてスクリプトかき始める

僕がPerlを使う理由 | /var/log/azumakuniyuki
http://blog.azumakuniyuki.org/2013/03/the-reason-i-use-perl.html
1. ワンライナー(cat,cut,grep,awk,sed,sort,uniqとか)
2. ワンライナーが長くなる OR 何回も使う時はシェルスクリプトにする
3. シェルスクリプトで面倒な処理はPerl(/usr/bin/perl+標準モジュール)で書く
4. Perlの標準モジュールで足りない場合はcpanで入れる

awkとsedはセットで覚えたほうがいいですか？ | Linux系OSのQ&A【OKWave】
http://okwave.jp/qa/q7656357.html

Coreutils - ja.wikipedia
http://ja.wikipedia.org/wiki/Coreutils

* find
findコマンドの-execで複数ファイルを扱うときは「-exec utility {} +」を使うのもオススメ - otsune's SnakeOil - subtech
http://subtech.g.hatena.ne.jp/otsune/20100410/findexecplus

* grep
grep/egrep と fgrepの違い - 技術メモ帳
http://d.hatena.ne.jp/lurker/20060509/1147179676

$ grep [options] pattern filename
ファイルからpatternにmatchする行を抜き出す

再帰的にgrep
$ find ./ -name '*.org' | xargs grep 'hoge moga'
'*' にするとdirectoryを除去できない

あるディレクトリ以下を再帰的に grep する方法 - Shoulder.jp
http://canalize.jp/archives/009306.php

- ref
http://x68000.q-e-d.net/~68user/unix/pickup?grep
http://linuxjm.sourceforge.jp/html/GNU_grep/man1/grep.1.html
  
- options

-E, -F, -G, -P
正規表現の選択

| -v | 指定したパターンを除く |
|    |                        |

* tr

** whats this
1文字置換

** usage
$ tr '\n' ',' < filename
改行をカンマに変換

$ tr -d '\n' < filename
改行を削除

* join
joinコマンドが便利過ぎて生きるのが辛い - Yuta.Kikuchiの日記
http://d.hatena.ne.jp/yutakikuchi/20120907/1346975281

* sed
Homebrew を使って OSX に GNU sed を入れる - ゆいゆい日記！！
http://shunirr.hatenablog.jp/entry/2012/12/19/160544

** ref 
http://itpro.nikkeibp.co.jp/article/COLUMN/20060227/230879/
http://shantiworks.info/2012/08/10/sed%E3%81%A7%E6%94%B9%E8%A1%8C%E3%82%92%E5%90%AB%E3%82%80%E8%A4%87%E6%95%B0%E8%A1%8C%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E7%BD%AE%E6%8F%9B/

** ???
パターンスペース
ホールドスペース
  
** usage
$ sed -e 's/検索パターン/置換文字列/g' target_file > output_file
単語や文章を置換

**** 末尾 options
| g | global match             |
| i | 大文字小文字を区別しない |

- sed で改行めちゃ面倒くさい...

* awk
Awk勉強会用資料 AWKでちょっとしたテキストを処理する方法
http://www.slideshare.net/juntoku/awk-35413164

AWK Users JP :: 日本の AWK ユーザのためのハブサイト
http://gauc.no-ip.org/awk-users-jp/

Amazon.co.jp： sed & awk デスクトップリファレンス: アーノルド ロビンス, Arnold Robbins, 福崎 俊博: 本
http://www.amazon.co.jp/dp/4873110173/
Amazon.co.jp： プログラミング言語AWK: A.V.エイホ, P.J.ワインバーガー, B.W.カーニハン, 足立 高徳: 本
http://www.amazon.co.jp/dp/4904807006
Amazon.co.jp： AWKを256倍使うための本 (Ascii 256倍): 志村 拓, 鷲北 賢, 西村 克信: 本
http://www.amazon.co.jp/exec/obidos/ASIN/4756101623/hatena-betest-22/ref=nosim
sed & awkプログラミング 改訂版の読み方
http://blog.livedoor.jp/okashi1/archives/51884586.html

なるべく書かないawkの使い方 - ザリガニが見ていた...。
http://d.hatena.ne.jp/zariganitosh/20131209/minimum_awk
awk歴一日の初心者が語るawk理解のポイント - 睡眠不足？！
http://d.hatena.ne.jp/sleepy_yoshi/20110918/p1
はじめてのAWK
http://aoki2.si.gunma-u.ac.jp/Hanasi/Algo/awk.html

AWKによるワンライナー7つ - None is None is None
http://doloopwhile.hatenablog.com/entry/2013/08/05/014709

Tailしながらsed,awk等をノーバッファで快適に使う。 - 自分の仕事を憎むには人生は余りにも短い
http://d.hatena.ne.jp/GARAPON/20120512/1336771281

簡単で、奥深くて、超便利！　LLの元祖「AWK」にさわってみよう （1/2）：CodeZine
http://codezine.jp/article/detail/7752

** usage
*** one-liner
awk '$3 > 0 {print $1, $2, 0}' hoge.dat > moga.dat

*** with program-file
awk -f program-file hoge.dat > moga.dat

* perl
「Perl 触ったことがない人が Perl の素晴らしい魅力のごく一端を享受出来る」「5分読んだら sed も awk もぶん投げたくなること請け合い」と薦められたのが ミニマルPerl ―Unix/LinuxユーザのためのPerl習得法
http://www.amazon.co.jp/dp/4873113687/

- 404 Blog Not Found:perl - ワンライナーの書き方入門
http://blog.livedoor.jp/dankogai/archives/51026593.html
- Perl one liner 集 perl 1行野郎
http://sonic64.com/2003-06-04.html

** usage
- 置換
$ perl -pe 's/\t/    /g' 

*** options
| -e | 文字列をスクリプトとして実行   |
|----+--------------------------------|
| -n | 1行毎に処理                    |
| -p | 1行毎に処理->結果をprint       |
|----+--------------------------------|
| -l | ループの前で行末の改行文字削除 |
|----+--------------------------------|
| -i | 入力ファイルを書き換え         |
|----+--------------------------------|
| -w | warning ?                      |

*** i opiton
-i.bak
オプションをつけると
hoge.txt.bak
というファイル名でバックアップが作成される。

* look
lookコマンドによる二分探索が速すぎて見えない - Yuta.Kikuchiの日記
http://d.hatena.ne.jp/yutakikuchi/20121029/1351467398

* 文字列の個数
http://oshiete.goo.ne.jp/qa/198863.html
http://q.hatena.ne.jp/1135146114

* 一括処理
Unix :: ファイル名の一括リネームいろいろ
http://tm.root-n.com/unix:general:rename
