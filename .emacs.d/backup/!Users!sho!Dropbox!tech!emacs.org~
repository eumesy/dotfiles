org-reveal- [ ] CDN使わない方法?- [ ] require じゃダメなの?installationhttp://zqfan.github.io/other/2013/11/28/org-reveal/* want to doemacs内 ショートカットで日付…Mozcをモードレス化する「ac-mozc.el」をMacで動かす | Act as Professionalhttp://hiroki.jp/ac-mozc-on-macMacで"make install"するなら「gnu stow」で管理すると便利！ | Macとかの雑記帳http://tukaikta.blog135.fc2.com/blog-entry-226.htmlさらに仕事がダラけてしまったのでpvコマンドでプログレスバー - harry’s memorandumhttp://dharry.hatenablog.com/entry/20110210/1297268423知っておきたい便利ツール、コマンドで操作するスニペット「Sheet」 | Macとかの雑記帳http://tukaikta.blog135.fc2.com/blog-entry-213.htmljmanを使わずにMacのmanを日本語化する方法 | Macとかの雑記帳http://tukaikta.blog135.fc2.com/blog-entry-224.htmlさいきんのターミナル開発環境 - 面白コンテンツ探求日記http://blog.horimisli.me/entry/terminal-env-2014事故らないために普段守っているターミナルの運用ポリシ（Mac + iTerm2） | TechRachohttp://techracho.bpsinc.jp/morimorihoge/2014_01_12/15093Gmailの宛先欄から名前を消すスクリプト書いたよー - 青春スイーツhttp://d.hatena.ne.jp/Aoba/20120519/1337360869近頃の開発環境 : Mosh、z、tmux、Emacs、Perl について - naoyaのはてなダイアリーhttp://d.hatena.ne.jp/naoya/20130108/1357630895昨今の自分用Webアプリケーションひな形 - naoyaのはてなダイアリーhttp://d.hatena.ne.jp/naoya/20130503/1367581629昨今のWebアプリケーションのひな形その2 - Grunt - naoyaのはてなダイアリーhttp://d.hatena.ne.jp/naoya/20130504/1367640512開発環境の情報共有会でDash,SourceTree,Alfredの話をした - Glide Note - グライドノートhttp://blog.glidenote.com/blog/2014/03/30/tech-tool-knowledge/エンジニア Mac アプリ 環境 おすすめ - mizchi's bloghttp://mizchi.hatenablog.com/entry/2014/03/02/090517?utm_source=dlvr.it&utm_medium=twitter新卒エンジニア向け：Macにインストールすべきアプリ達http://tech.basicinc.jp/Mac/2014/04/20/mac_app_engineer/emacs.d/init.org at master · takaxp/emacs.d · GitHubhttps://github.com/takaxp/emacs.d/blob/master/init.org# すばらしいinitEmacs - 来年も使いたいelispランキング2013 - Qiitahttp://qiita.com/l3msh0@github/items/97909d6e2c92af3acc00自分が入れたEmacs便利拡張・設定集 (2013年版) - $shibayu36->blog;http://shibayu36.hatenablog.com/entry/2013/12/30/190354年末emacs設定大掃除をして、これは捨てられないと思った設定書いてく - $shibayu36->blog;http://shibayu36.hatenablog.com/entry/2012/12/29/001418ぼくの.emacs 2013 - Qiitahttp://qiita.com/tadsan/items/c4a80f46623ea266f5c5Markdownでスライドを作る決定版！「Deckset」が非常に良かった話 - 5.1さらうどんhttp://giginet.hateblo.jp/entry/2014/05/05/215804- 全体の文字数表示したい** メールのemacs化** unix力- diffの読み方- lessの操作** 自動プロトタイプ宣言?** test, debug** rm でゴミ箱に行くように…** mykiememo: Emacsのキーバインドをひとつのキーに複数登録する拡張mykie.elの紹介http://sleepboy-zzz.blogspot.jp/2013/12/emacsmykieel.html** ストレージ iTunesのデータのバックアップ先として…? webclip?[N] 「Pogoplug」iTunesフォルダを同期しiPhone（3G回線）で音楽を聴くhttp://netafull.net/pogoplug/037063.html** 全角「＜」半角「<」区別付きづらい… もう一度コンパイル** マウスを使う！！メニューをクリッカブルに！[n] ターミナルの Emacs でマウスを使う方法 - nobu417.jphttp://www.nobu417.jp/weblog/hacks/how-to-controll-emacs-on-terminal-with-mouse.htmlMacにemacs入れてとりあえず昨日やったことのメモ - memo63http://saku-na63.hatenablog.com/entry/2013/10/08/204741Emacs 24(RC)のnox11でxterm-mouse-modeを使う - Boost Your Programming!http://kazegusuri.hateblo.jp/entry/20120602/1338643214** キルリングとクリップボードの共有若き日の過ち: キルリングとクリップボードの共有（とりあえずMac）http://hakurei-shain.blogspot.jp/2010/05/mac.htmltmux + iTerm2とクリップボード - cynipeと読むhttp://cynipe.hateblo.jp/entry/2012/05/22/233533端末エミュレーション - iTerm2のクリップボードインテグレーション(OSC 52/PASTE64)のつかいかた - Qiitahttp://qiita.com/kefir_/items/1f635fe66b778932e278[n] Mac の iTerm の中で tmux と Emacs を快適に - nobu417.jphttp://www.nobu417.jp/weblog/hacks/make-emacs-and-tmux-in-iterm-comfortable.html** org->tex->pdf 自前メモのまとめには最高では…** org capture -> memo環境.org** package管理 (el-get + package)Emacsパッケージ管理 — MemoBloghttp://yymm.bitbucket.org/blog/html/2013/07/14/more_emacs.html自分の el-get のワークフローについて整理する - そんなこと覚えてないhttp://blog.eiel.info/blog/2013/08/07/el-get/** マーク付けて戻ってきたい** 関数一覧、関数ジャンプ** emacs 画面からコンパイル** ファイラEmacsのファイラとdired | Techno Suitehttp://blog.perforb.com/archives/134emacsのDiredを2画面ファイラ化するe2wmのパースペクティブをつくってみたhttp://mikio.github.io/article/2012/04/11_emacsdired2e2wm.htmldired/dired-xhttp://www.math.s.chiba-u.ac.jp/~matsu/emacs/emacs21/dired.htmlEmacsにフォルダブラウザ機能を持たせる「Emacs Nav」|オープンソース・ソフトウェア、ITニュースを毎日紹介するエンジニア、デザイナー向けブログhttp://www.moongift.jp/2009/03/emacs-nav/vallog: [emacs][filer]emacsにfiler（ファイラー）機能を追加する (emacs-nav)http://valvallow.blogspot.jp/2009/05/emacsfileremacsfiler.html** template 機能** ほか- RemindersをOrg-modeでiCloud Reminders in Org-mode: Talking to OS X with Emacshttp://msnyder.info/posts/2012/05/icloud-reminders-orgmode/#sec-2- italic  参考  https://code.google.com/p/iterm2/issues/detail?id=391  A xterm-256color based TERMINFO that adds the escape sequences for italic  https://gist.github.com/edsono/3451952  ここから .terminfo をDLして指示通りにするとインストールできた  default?の.terminfoは  http://hints.macworld.com/article.php?story=2004122710403854  を見れば探せるけど、関係ないっぽい  Font Book.app に? italic が登録されているフォントなら登録可  あとは Ricty-italic.fft? 的なものを生成できれば…- org-mode の表の色、表示できるものにしたい...- カーソルが今置いてある行の反転- color theme, search 時のヒット箇所をもっと目立たせる- powerline- 時間入れたい full-screen時- tabbar 見栄え/代替el** C-M-% とか** flymakeflymakeの設定する前に flycheckを確認しよう - Life is very shorthttp://d.hatena.ne.jp/syohex/20130123/1358950322** gdb** Cocoa Emacs  - フォント    Ricty使いたい...    http://the.nyarla.net/post/50891552865    http://d.hatena.ne.jp/yuto_sasaki/20120714/1342262120Cocoa Emacs 利用時のみフォント設定を効かせるinit.elの設定、とバージョンとかで切り替える場合の設定。 - 牌語備忘録 - pygohttp://d.hatena.ne.jp/CortYuming/20100903/p1Emacs 23.3aをHomebrewを使って自分でインスコした - 空繰再繰http://the.nyarla.net/post/50888910982  - 半透明  - KillRing <---> Clip Board 共有** info* 確認キーバインド確認M-x describe-bindings 全て確認M-x describe-key RET [key]コマンド確認M-x apropos-command RET 検索ワード RET* package** 'package (Emacs 24以後)M-x list-packages ;; ネットワークから最新のリストを取得M-x package-list-packages-no-fetch ;; リストをキャッシュから閲覧i ... choose (install)d ... choose (uninstall)x ... install/uninstallM-x package-install RET PACAKAGE_NAME RET* emacsclientあらかじめemacsを立ち上げた状態にしておいて、それ以降の起動はクライアントという形で起動daemon = バックグラウンドプロセスとして動作するプログラムhttp://www.emacswiki.org/emacs/EmacsAsDaemonhttp://d.hatena.ne.jp/sasakyh/20091127#p1http://d.hatena.ne.jp/syohex/20101224/1293206906** 現行運用*** コマンド群, 設定export ALTERNATIVE_EDITOR='';; ALTERNATIVE_EDITOR を渡さずに開いてしまったときのために(Emacs.appのダブルクリックとか)(require 'server)(unless (server-running-p) ;; 重複起動抑止    (server-start))クライアント起動 (初回は自動でサーバ起動)$ emacsclient -nw (CUI)$ emacsclient -c -n (GUI)クライアント終了 (emacs)C-x C-c (save-buffers-kill-terminal)サーバ終了 (emacs)M-x exitasM-x save-buffers-kill-emacsサーバ終了 (terminal)$ emacsclient -e '(kill-emacs)'クライアント終了 (terminal)$ pkill -f 'emacsclient -nw'サーバ＋クライアント終了*** emacsclient nw.appAutomator.app で、Run AppleScript---on run {input, parameters}  set _path to (quoted form of (POSIX path of (the input as alias)))  tell application "iTerm"    activate    set _term to (make new terminal)    tell _term      launch session "Default"      set _session to current session    end tell    tell _session      write text "emacsclient -nw -a '' " & _path    end tell  end tellend run---http://fimbul.hateblo.jp/entry/2013/11/13/162614https://code.google.com/p/iterm2/wiki/AppleScriptquoted form についてhttp://apple.stackexchange.com/questions/4938/how-to-change-applescript-path-to-a-terminal-style-path*** emacsclient c n.app (課題: emacs daemon が起きていないと動かない)Automatorで、Run Shell Script  Shell: /bin/sh  Pass input: as arguments---for f in "$@"do    /usr/local/bin/emacsclient -c -n "$f"done---http://tutuming.tumblr.com/post/56782072696/emacsclient-automator**** 課題: emacs daemon が起きていないと動かない- x -a "", -a '', -a "''", -a \'\', -a \"\"- x Playtus 同じ条件で動かない- x Applications フォルダに置く*** 関連付け適当なファイルで cmd+i -> Open with: emacsclient **.app -> Change all実際は Launch Services キーで変えている?http://secondflush2.blog.fc2.com/blog-entry-891.html** knowledge, 未対応項目*** emacs --daemon サーバの起動$ emacs --daemonor M-x server-startマシン起動時にemacs --daemonを実行?http://d.hatena.ne.jp/NeoCat/20131108/1383937311#20131108f1*** emacsclient クライアントの起動 = サーバへの接続$ emacsclient-a      サーバが立ち上がっていない際に立ち上げるalternative editor    環境変数 ALTERNATIVE_EDITOR からも設定可    '' なら emacs --daemon された上で接続-nw, -t, --tty    open a new Emacs frame on the current terminal.    CUI-c    create a new frame instead of trying use the current Emacs frame.    GUI-n    returns immediately without waiting for you to "finish" the buffer in Emacs.*** サーバの起動と接続をまとめる-a (ALTERNATIVE_EDITOR) を設定しておけばOKシェルスクリプトでhttp://d.hatena.ne.jp/NeoCat/20131108/1383937311#20131108f1*** サーバを終了$ emacsclient -e '(kill-emacs)'    exit the emacs job and kill it.M-x server-edit (C-x #)    ???M-x save-buffers-kill-emacs    offer to save each buffer, then kill this emacs process.*** サーバを安全に終了(未)http://www.emacswiki.org/emacs/EmacsAsDaemon > Stopping the Emacs Daemonhttp://stackoverflow.com/questions/1167484/how-to-gracefully-shutdown-emacs-daemon/2270603どの策も、-nw で立ち上げる方針だとうまく動かない*** サーバが起動していたときに限りサーバ終了(未)いま、わざわざemacsを立ち上げた上で終了しているプロセスチェックすればできそう*** クライアントを終了M-x save-buffers-kill-terminal (C-x C-c)    offer to save each buffer, then kill the current connection.M-x delete-frame (C-x 5 0)    delete frame, permanently eliminating it from use.*** EDITOR変数, lessからemacsclientexport EDITOR='emacsclient -nw'lessしてからvを押したときにemacsclient*** git commitをemacsclient -nwで$ git config --global core.editor 'emacsclient -nw'*** emacsclient.app起動済の Emacs.app で開く  http://sky-y.hatenablog.jp/entry/20110807/1312705050  http://www.nobu417.jp/weblog/hacks/making-an-application-package-of-emacsclient-and-it-makes-me-happy.html  http://rainbowdevil.jp/?p=1045*** OS起動時にemacs --daemon (未)このときは対策として(require 'server)(unless (server-running-p)  (server-start)  )あっても良さそうhttp://d.hatena.ne.jp/sasakyh/20091127/p1#20091127f2*** window-system での判定がうまくいかない? (未)http://d.hatena.ne.jp/sasakyh/20091127#p1*** daemon と server-start の違い(?)http://d.hatena.ne.jp/syohex/20101224/1293206906私は Emacsを色反転して起動(--reverseオプション)するのですが、daemonだと色の設定方法がよくわからないためです。*** screen使うときは工夫が必要? (未)http://k-ui.jp/blog/2010/07/28/emacsclient_%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%AE%E7%A8%AE%E9%A1%9E%E3%81%A8%E3%80%81%E4%BE%BF%E5%88%A9%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9/* バックアップファイル、自動保存ファイルEmacsのバックアップファイルのカスタマイズ：Linuxの環境設定に関するメモ：So-netブログhttp://dan-project.blog.so-net.ne.jp/2012-06-04* モードライン123452: 文字コード - キーボード入力3: 画面表示4: ファイル入出力5: 改行コード | :     | LF    | | (DOS) | CR-LF | | (MAC) | CR    | 文字コード | E | EUC-JP |U: utf-8E: euc-jp* helmhttp://www49.atwiki.jp/ntemacs/m/pages/32.html* yasnippet** 作成M-x yas/new-snippet# -*- mode: snippet -*-# name: e.g. for (int i=0; i<...; i++) {...}# key: e.g.fori# binding: direct-keybinding <=== 消す# expand-env: ((some-var some-value)) <=== 消す# type: command <=== 消す# --for (int i=0; i<${1:N}; i++) {  $0}C-c C-c to savefile name: e.g. fori** 文法要エスケープ(バックスラッシュによる)\Writing snippetshttp://yasnippet-doc-jp.googlecode.com/svn/trunk/doc-jp/snippet-development.htmlyasnippet 8.0の導入からスニペットの書き方、anything/helm/auto-completeとの連携 - Web学びhttp://fukuyama.co/yasnippet- ミラーリング例えば$1と2カ所以上に書いておけば、同時に編集できる(え?)色々ありそう- リストから選択- elisp の実行yasnippet や emacs lisp の小ネタなど - 技術日記＠kiwanamihttp://d.hatena.ne.jp/kiwanami/20110224/1298526678これが「type: command」?** 編集yas/visit-snippet-file# そのモードでしか開けない模様保存してからC-c C-c** reloadM-x yas/reload-all** .yas-parents親のモードを書く -> 親モードでも使える?  ** ref   lispをがんがん書く   http://kita.dyndns.org/diary/?date=20121212* 文字コードhttp://www.rsch.tuis.ac.jp/~ohmi/literacy/emacs/emacs-jcode.html**** 変更C-x RET-f (set-buffer-file-coding-system)  helm入れてるとダメっぽい'iso-2022-jp'shift_jis'euc-jp'utf-8* color設定色確認M-x helm-color#RRGGBB -> 色見本http://www.colorhexa.com/* 検索/置換emacsの正規表現をもっと便利に使う - $shibayu36->blog;http://shibayu36.hatenablog.com/entry/2013/01/15/201827- re-builder- perlの正規表現使える** 逐次検索C-sC-r** 逐次置換*** query-replaceM-%** 一括置換*** replace-string     M-x replace-string RET string RET newstring RET- ポイント以後- or リージョン内*** replace-regexpreplace-string の正規表現版マッチしたもの全体 -> \& で取れる\( \) -> の中身を\1,\2...で取れる**** 改行の検索/置換ミニバッファ内で C-q C-j* マーク| C-SPC               |                  | マークをセット     || C-x C-x             |                  | 直前のマークに戻る || C-u C-SPC C-SPC ... | 'pop-global-mark | マークをサイクル   |* 矩形編集cua-mode ... の矩形選択機能| C-RET  | 矩形選択開始                                                                                           ||--------+--------------------------------------------------------------------------------------------------------|| M-b    | 矩形をスペースで埋める                                                                                 || M-t    | 矩形を入力された文字列で埋める                                                                         || M-f    | 矩形を入力された1文字で埋める                                                                          || M-n    | 矩形の各行にインクリメントされた数値をフォーマットして挿入する                                         ||--------+--------------------------------------------------------------------------------------------------------|| M-k    | 矩形をキルする                                                                                         ||--------+--------------------------------------------------------------------------------------------------------|| M-i    | 矩形の各行の数値をインクリメントする                                                                   ||--------+--------------------------------------------------------------------------------------------------------|| M-/    | 矩形の正規表現にマッチする行をハイライト                                                               || M-r    | 矩形を置換する                                                                                         ||--------+--------------------------------------------------------------------------------------------------------|| M-PIPE | 矩形を入力としてシェルコマンドを実行する。引数が指定されている場合はシェルコマンドの結果が矩形に埋まる |* tex-modeM-RET 箇条書きの続きとか| table | table |   