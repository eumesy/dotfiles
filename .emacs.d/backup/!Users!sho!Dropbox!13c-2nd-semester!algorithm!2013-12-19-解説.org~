* 問1

アイデア: a,b,cの数をひとつずつチェック
- ヘッダを→に動かしながらaをa'、  に書き換える

状態繊維関数書き忘れ-1
状態10以上-1
教科書授業の表記に則っていない-1
非決定性-2
正しくない入力を受理-2

* 問2

アイデア: 桁数をそろえ、上位ビットから比較していく

入力テープをスキャン、最大の桁数を第2テープに記録

第3テープに第2テープと同じ数だけ0を書いて#を書く

第1テープと第3テープを#から左へ読んで(0埋めしつつ?)コピーしていく

コピーが終われば#に戻り上の動作に戻る

-

第3テープを第4テープにコピー (3,4全くおなじ状態)

第3テープ#をまたいだ2数を上位ビットから比較

同じ数字ならそのまま、異なるとき1の方の数字を第4テープにコピーし、#'を書いて小さい方の数字をコピー

* 問3

アイデア: 対角線論法

言語Lと矛盾

「存在する事を示せ」という問題なので、構成的に示さなくてもOK


** 別アイデア
「任意の{1}上の言語について、その言語を認識するTMが必ず存在する」と仮定
{1}上の言語→{0,1}上の言語が1対1対応
「どんなTMでも認識できない{0,1}上の言語が存在する」と矛盾
# 上手…

仮定が「任意の{1}上野言語を存在する認識するTMが存在する」なら×
冒頭で論理的におかしければ完全に×
岩間先生も同様かと思われる



* ミニテスト
かなりできが悪かった

* 問1
教科書の空集合問題の正反対の(?)問題

与えられたTMが{0,1}上の全ての列を受理するかどうかを判定する問題を「全列受理問題」と呼ぶ事にする

アイデア: ε停止問題を全列受理問題に還元
ε停止問題のインスタンスを本問題のインスタンスに変換する
ここで、インスタンスはTM(のみ)

ε問題のyes/noインスタンス → 本問題のyes/noインスタンス
の1対1対応を作るのが目標


変換ですべきこと
入力εで停止するTM -> すべての列を受理するTM
入力εで停止しないTM -> ある列を受理しないTM

模範解答としては…
入力εで停止するTM -> すべての列を受理するTM
入力εで停止しないTM -> εを受理しないTM
                        --------------


おこなうべき変換の明示 1
ε以外の列がきたら受理するように前処理 3
εの処理? 3
停止するTMの能力の範囲で変換できることで書く 3

* 問2
× 解き方を示して、これで可解である
○ 必ず停止するTMの能力の範囲で解ける
   ---------------------------------- これが可解の定義

可解 +2
yesになるときの場合分け+正しく並び替えるTMの動作を説明 2
noになるときの〜非受理になるTMの動作を説明 2
動作が必ず停止するTMで実現可能なことを示す 4

* 問3
この問題が一番難しい

もし1テープでやろうとすると
- 前半0後半1かチェック
- 1→1' 0をひとつ飛ばしで0'に
これだとO(n log n)

(計算量によらず?) 設計できていれば5点

× 入力の形を 0^i 1^j に仮定している答案あり


受理するTMの設計 5
設計したTMの動作時間の評価 2
--- ここまでは線形時間で動かなくてもOK

動作時間が入力長の線形時間 3

正しくない列を非受理にしていない -2
TMの動作が正しくない -1
時間評価が厳密でない -1

×「0を倍にしていきます」今の長さをどう記憶するか
  TMは有限状態

* 試験向けアドバイス
- 「還元」の定義
- 「可解/非可解」の定義
- オーダーの表記、考え方

はじめの方に証明のアイデアを書いておかないと、
「よくわからん」と続きを読まずに


レポート 20
ミニテスト 30
試験 70
---
120


60点で可
100点越えたらきられる

